#!/bin/bash 
#
# Deploy a current project to a local server, or clean the deployments in a
# local server.
#
# To deploy a procject, ldeploy creats a symlink from the server's deployments
# folder to the current folder (which must be the exploded WAR that you would
# like to deploy). Also creates the necessary ".dodeploy" marker file for JBoss.
#
# Usage
# -----
#
#     ldeploy [jboss|tomcat] [clean]
#
# Examples
# --------
# 
#    ldeploy jboss clean (from any directory)
#
# Removes all deployments in your local JBoss
#
#    cd <exploded_war_path>
#    ldeploy tomcat
# 
# Deploys the current exploded war to Tomcat
#
#    cd <exploded_war_path>
#    ldeploy jboss
#
# Deploys the current exploded war to JBoss

case $1 in

    jboss)
	server="jboss"
	shift
    ;;

    tomcat)
	server="tomcat"
        shift
    ;;

    *)
	echo "You must specify either jboss or tomcat"
        exit 1
    ;;

esac

# set necessary variables depending on server
if [ $server == "jboss" ]; then
    if [[ -z $JBOSS_HOME ]]; then
	echo "You must set a JBOSS_HOME"
	exit 1
    fi

    DEPLOYMENTS_DIR=$JBOSS_HOME/standalone/deployments
    war_name=$(basename $(pwd)).war

elif [ $server == "tomcat" ]; then
    if [[ -z $CATALINA_HOME ]]; then
	echo "You must set a CATALINA_HOME"
	exit 1
    fi

    DEPLOYMENTS_DIR=$CATALINA_HOME/webapps
    war_name=$(basename $(pwd))
fi

case $1 in

    # remove everything in the server's deployment folder
    clean)
	echo "cleaning deployments for $server"
	
	cd $DEPLOYMENTS_DIR

	# to remove JBoss deployment, we need to remove any '.war' files
	# (symlinks and .war.dodeploy files) in the JBoss deployments dir
	if [ $server == "jboss" ]; then
	    echo "removing deployed apps in $DEPLOYMENTS_DIR"
	    rm *\.war*
	fi

	# to remove Tomcat deployments, we can remove any symlinks in the
	# 'webapps' folder (Tomcat's bundled deployments aren't symlinks)
	if [ $server == "tomcat" ]; then
	    echo "removing deployed apps in $DEPLOYMENTS_DIR"
	    find . -maxdepth 1 -type l -exec rm -rf {} +
	fi
    ;;

    # deploy the current project to the server
    *)
	echo "deploying to $server"

	# you should be in the target directory of your project
	two_dirs_up=$(basename $(dirname $(pwd)))
	if [ $two_dirs_up != "target" ]; then
	    echo "You should execute this script from the exploded WAR of your project."
	    exit 1
	fi

	exploded_war_path=$(pwd)
	cd $DEPLOYMENTS_DIR

	echo "creating symlink $war_name"
	echo "  from:  $(pwd)"
	echo "  to:    $exploded_war_path"
	
	ln -s $exploded_war_path "$war_name"

        # JBoss needs .dodeploy file flags
	if [ $server == "jboss" ]; then
	    touch "$war_name.war.dodeploy"
	fi
    ;;

esac
